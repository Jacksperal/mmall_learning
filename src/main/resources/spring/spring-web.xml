<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--配置springMVC-->
    <!--1:开启springMVC注解模式
        简化配置：
        (1)自动注册DefaultAnnotationHandlerMapping AnnotationMethodHandlerAdapter
        (2)提供一系列:数据绑定，数字和日期的format @NumberFormat @DataTimeFormat
        xml,json默认读写支持
    -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--2:servlet-mapping 映射路径:"/"-->
    <!--静态资源默认servlet配置
        (1):加入对静态资源的处理：js,gif,png
        (2):允许使用"/"做整体映射
    -->
    <mvc:default-servlet-handler/>

    <!--3:jsp显示ViewResolver-->
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
       &lt;!&ndash;&ndash;&gt;
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        &lt;!&ndash;前缀&ndash;&gt;
        <property name="prefix" value="/WEB-INF/jsp/"/>
        &lt;!&ndash;结尾&ndash;&gt;
        <property name="suffix" value=".jsp"/>
    </bean>-->

    <!--4:扫描web相关的bean-->
    <context:component-scan base-package="com.mmall.controller"></context:component-scan>
    <context:component-scan base-package="com.mmall.common"></context:component-scan>

    <!--上传功能配置 200*1024*1024即200M resolveLazily属性启用视为了推迟文件解析，以便捕获文件大小异常-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--上传在内存中最大的大小-->
        <property name="maxInMemorySize" value="209715200"></property>
        <!--最大上传大小-->
        <property name="maxUploadSize" value="10485760"></property>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="resolveLazily" value="true"/>
    </bean>
    
    <mvc:interceptors>
        <!--定义在这里的,所有都会拦截-->
        <mvc:interceptor>
            <!--manage/a.do     /manage/*-->
            <!--manage/b.do     /manage/*-->
            <!--manage/product/save.do      /manage/**-->
            <!--manage/order/detail.do      /manage/**-->
            <mvc:mapping path="/manage/**"/>
            <bean class="com.mmall.controller.common.interceptor.AuthorityInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>